name: Docker Release Build

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push TLDraw image
        uses: docker/build-push-action@v5
        with:
          context: ./tldraw
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Engine image
        uses: docker/build-push-action@v5
        with:
          context: ./engine
          file: ./engine/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Update release notes with Docker images
        uses: actions/github-script@v7
        with:
          script: |
            const release = context.payload.release;
            const version = release.tag_name;
            const body = release.body || '';
            
            const dockerImages = `
### üê≥ Docker Images

- **TLDraw**: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/tldraw:${version}\`
- **Engine**: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/engine:${version}\`
- **Latest**: \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/tldraw:latest\`

### üöÄ Quick Start with Docker

\`\`\`bash
# Pull the latest images
docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/tldraw:${version}
docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/engine:${version}

# Or use docker-compose with specific version
git clone https://github.com/${{ github.repository }}.git
cd diagram-tools-hub
git checkout ${version}
./manage-config.sh start
\`\`\`
`;
            
            const updatedBody = body + dockerImages;
            
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: release.id,
              body: updatedBody
            });

      - name: Notify success
        run: |
          echo "üéâ Docker images built and pushed successfully!"
          echo "üì¶ Images: ${{ steps.meta.outputs.tags }}"
          echo "üè∑Ô∏è  Labels: ${{ steps.meta.outputs.labels }}" 