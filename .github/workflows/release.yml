name: Release Management

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string
      release_type:
        description: 'Release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
      prerelease:
        description: 'Is this a prerelease?'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  packages: write
  security-events: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Generate changelog
        id: changelog
        uses: actions/github-script@v7
        with:
          script: |
            const { data: commits } = await github.rest.repos.compareCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: 'main',
              head: 'HEAD'
            });
            
            const conventionalCommits = commits.commits
              .filter(commit => !commit.commit.message.includes('Merge'))
              .map(commit => {
                const message = commit.commit.message.split('\n')[0];
                const sha = commit.sha.substring(0, 7);
                return `- ${message} (${sha})`;
              })
              .join('\n');
            
            return conventionalCommits;

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: Release v${{ github.event.inputs.version }}
          generate_release_notes: true
          body: |
            ## 🚀 Release v${{ github.event.inputs.version }}
            
            ### What's Changed
            
            ${{ steps.changelog.outputs.result }}
            
            ### 🐳 Docker Images
            
            - **TLDraw**: `ghcr.io/${{ github.repository }}/tldraw:v${{ github.event.inputs.version }}`
            - **Engine**: `ghcr.io/${{ github.repository }}/engine:v${{ github.event.inputs.version }}`
            
            ### 🚀 Quick Start
            
            ```bash
            # Clone the repository
            git clone https://github.com/${{ github.repository }}.git
            cd diagram-tools-hub
            
            # Checkout this release
            git checkout v${{ github.event.inputs.version }}
            
            # Start all services
            ./manage-config.sh start
            
            # Access the hub at http://localhost:8080
            ```
            
            ### 📋 Features
            
            - 🎨 **Draw.io** - Professional diagramming platform
            - ✏️ **Excalidraw** - Virtual whiteboard for sketching
            - 🎨 **TLDraw** - Modern collaborative drawing canvas
            - 🔧 **Easy Management** - Simple scripts for container management
            
            ### 🛠️ System Requirements
            
            - Docker and Docker Compose
            - 4GB RAM minimum
            - 2GB disk space
            
            ### 📝 Changelog
            
            See the [full changelog](https://github.com/${{ github.repository }}/commits/v${{ github.event.inputs.version }}) for detailed changes.
          draft: false
          prerelease: ${{ github.event.inputs.prerelease }}

      - name: Update version in files
        run: |
          # Update version in README or other files if needed
          echo "Version v${{ github.event.inputs.version }} released successfully!"
          echo "Release URL: ${{ steps.create_release.outputs.upload_url }}"

      - name: Notify success
        if: success()
        run: |
          echo "🎉 Release v${{ github.event.inputs.version }} created successfully!"
          echo "📦 Docker images will be built and pushed automatically"
          echo "🔗 Release URL: ${{ steps.create_release.outputs.html_url }}" 